@model EventDbModel
@{
    ViewData["Title"] = "Edit";
}
<head>
   
</head>
<h2>Edit</h2>
@using (Html.BeginForm(new { FormMethod.Post }))

{
    <style>
        .field-validation-error {
            color: red;
        }
    </style>
    <div class="form-group row">
        <label for="example-text-input" class="col-2 col-form-label">Name</label>
        <div class="col-10">
            @Html.ValidationMessageFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name, new {placeholder = "Name", @class = "form-control" })
        </div>
    </div>
    <div class="form-group row">
        <label for="example-search-input" class="col-2 col-form-label">Location</label>
        <div class="col-10">
            @Html.ValidationMessageFor(x => x.Location)
            @Html.TextBoxFor(x => x.Location, new {placeholder = "Location", @class = "form-control" })
        </div>
    </div>
    <div class="form-group row">
        <label for="example-email-input" class="col-2 col-form-label">StartTime</label>
        <div class="col-10">
            @Html.ValidationMessageFor(x => x.StartTime)
            @Html.TextBoxFor(x => x.StartTime, new {@class = "form-control" })
        </div>
    </div>
    <div class="form-group row">
        <label for="example-datetime-local-input" class="col-2 col-form-label">EndTime</label>
        <div class="col-10">
            @Html.ValidationMessageFor(x => x.EndTime)
            @Html.TextBoxFor(x => x.EndTime, new {@class = "form-control" })
        </div>
    </div>
    <div class="container-contact100-form-btn">
        <button class="contact100-form-btn">
            Submit
        </button>
    </div>

}

